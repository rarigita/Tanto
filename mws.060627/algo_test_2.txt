> restart;with(geometry);with(plots);Digits:=30;_EnvHorizontalName := x; _EnvVerticalName := y;
[Apollonius, AreCollinear, AreConcurrent, AreConcyclic, AreConjugate, 

  AreHarmonic, AreOrthogonal, AreParallel, ArePerpendicular, AreSimilar, 

  AreTangent, CircleOfSimilitude, CrossProduct, CrossRatio, DefinedAs, 

  Equation, EulerCircle, EulerLine, ExteriorAngle, ExternalBisector, 

  FindAngle, GergonnePoint, GlideReflection, HorizontalCoord, HorizontalName, 

  InteriorAngle, IsEquilateral, IsOnCircle, IsOnLine, IsRightTriangle, 

  MajorAxis, MakeSquare, MinorAxis, NagelPoint, OnSegment, ParallelLine, 

  PedalTriangle, PerpenBisector, PerpendicularLine, Polar, Pole, RadicalAxis, 

  RadicalCenter, RegularPolygon, RegularStarPolygon, SensedMagnitude, 

  SimsonLine, SpiralRotation, StretchReflection, StretchRotation, TangentLine, 

  VerticalCoord, VerticalName, altitude, apothem, area, asymptotes, bisector, 

  center, centroid, circle, circumcircle, conic, convexhull, coordinates, 

  detail, diagonal, diameter, dilatation, directrix, distance, draw, dsegment, 

  ellipse, excircle, expansion, foci, focus, form, homology, homothety, 

  hyperbola, incircle, inradius, intersection, inversion, line, medial, 

  median, method, midpoint, orthocenter, parabola, perimeter, point, powerpc, 

  projection, radius, randpoint, reciprocation, reflection, rotation, segment, 

  sides, similitude, slope, square, stretch, tangentpc, translation, triangle, 

  vertex, vertices]
[Interactive, animate, animate3d, animatecurve, arrow, changecoords, 

  complexplot, complexplot3d, conformal, conformal3d, contourplot, 

  contourplot3d, coordplot, coordplot3d, cylinderplot, densityplot, display, 

  display3d, fieldplot, fieldplot3d, gradplot, gradplot3d, graphplot3d, 

  implicitplot, implicitplot3d, inequal, interactive, interactiveparams, 

  listcontplot, listcontplot3d, listdensityplot, listplot, listplot3d, 

  loglogplot, logplot, matrixplot, multiple, odeplot, pareto, plotcompare, 

  pointplot, pointplot3d, polarplot, polygonplot, polygonplot3d, 

  polyhedra_supported, polyhedraplot, replot, rootlocus, semilogplot, 

  setoptions, setoptions3d, spacecurve, sparsematrixplot, sphereplot, 

  surfdata, textplot, textplot3d, tubeplot]
                               30
                               x
                               y
Este tanto es diferente de los anteriores, aqui se evaluan al vuelo z y c_z y su complementario, se construyen dos rectas opuestas y se restan las intersecciones con el eje y.
> tanto := proc( p1, p2, p )
>   local k, sq, a, c_a, die, r, c_z, c_q, t, L, L1, diff;
>   k := p1 * p2;
>   sq := evalf(sqrt(k));
>   printf(" %d * %d = %d, sqrt(%d) = %f \n",p1,p2,k,k,sq);
> 
>   
>   a  := evalf( k / ( k - sq ) );
>   c_a:= a * sq;
> 
>   L := [];
>   L1 := [];
>   r := (p1+1)/2;
>   if ( r mod 2 <> 0 ) then r := r + 1; end if;
> 
>   while ( r < trunc(sq) ) do
> 
>     c_z := (c_a*k)/(k-r*c_a);
>     c_q := -(c_z - sq);
>     t   := round(((c_q*k)-(c_a*k))/(c_a*c_q));
>     c_q := (c_a*k)/(k-t*c_a);
> 
>     line(l0,y=0,[x,y]);
>     line(l1,x=0,[x,y]);
> 
>     point(P1,[t,c_z]):
>     point(P2,[r,c_q]):
>     line(lin1,[P1,P2]);
> 
>     #r := r/2;
>     #t := t/2;
> 
>     point(P1,[r,c_z]):
>     point(P2,[t,c_q]):
>     line(lin2,[P1,P2]);
> 
>     diff := VerticalCoord(intersection(Q,lin1,l1)) + VerticalCoord(intersection(Q,lin2,l1));
> 
>     if( abs(trunc(sq*100000)) = abs(trunc(diff*100000)) ) then
>       L1:= [op(L1),[r,diff]];
>     end if;
> 
>     L:= [op(L),[r,diff]];
> 
>     if ( p = 1 ) then print(r, diff); end if;
> 
>     r := r + 2;
> 
>   end do;
> 
>   display(pointplot(L,connect=true,colour=blue),pointplot(L1),view=[0..k,-k..k]);
> 
> end proc:
> tanto(3,11,1);
 3 * 11 = 33, sqrt(33) = 5.744563 
               2, 5.7445626465380286598506114682
               4, 18.035660458484684110941886154

> tanto(7,23,1);
 7 * 23 = 161, sqrt(161) = 12.688578 
               4, 12.6885775404495203801937727461
               6, 12.6885775404495203801937727460
               8, 12.6885775404495203801937727460
               10, 12.688577540449520380193772744

> tanto(23,61,1);
 23 * 61 = 1403, sqrt(1403) = 37.456642 
              12, 37.4566416006560844472448586155
              14, 37.4566416006560844472448586153
              16, 37.4566416006560844472448586154
              18, 37.4566416006560844472448586147
               20, 37.456641600656084447244858615
               22, 37.456641600656084447244858615
               24, 37.456641600656084447244858616
               26, 37.456641600656084447244858616
               28, 37.456641600656084447244858616
               30, 37.45664160065608444724485862
               32, 37.45664160065608444724485859
               34, 37.45664160065608444724485860
                36, 37.456641600656084447244860

> tanto(59,127,0);
 59 * 127 = 7493, sqrt(7493) = 86.562116 

> p1:=nextprime(34):p2:=nextprime(87):tanto(p1,p2,0);
 37 * 89 = 3293, sqrt(3293) = 57.384667 

> p1:=nextprime(105):p2:=nextprime(333):tanto(p1,p2,0);
 107 * 337 = 36059, sqrt(36059) = 189.892075 

> tanto(101,103,0);
 101 * 103 = 10403, sqrt(10403) = 101.995098 

> p1:=nextprime(57):p2:=nextprime(245):tanto(p1,p2,0);
 59 * 251 = 14809, sqrt(14809) = 121.692235 

> p1:=nextprime(357):p2:=nextprime(1245):tanto(p1,p2,0);
 359 * 1249 = 448391, sqrt(448391) = 669.620042 

> p1:=nextprime(234):p2:=nextprime(2345):tanto(p1,p2,0);
 239 * 2347 = 560933, sqrt(560933) = 748.954605 

> p1:=nextprime(656):p2:=nextprime(678):tanto(p1,p2,0);
 659 * 683 = 450097, sqrt(450097) = 670.892689 

> 
